{"version":3,"sources":["services/http.service.js","services/movie.service.js","cmps/search-movie.jsx","cmps/card-ui.jsx","assets/imgs/No_image_available.png","cmps/movie-preview.jsx","cmps/movie-list.jsx","pages/home.jsx","assets/imgs/three-dots.svg","cmps/loader.jsx","cmps/ratings.jsx","pages/movie-details.jsx","routes.js","App.jsx","reportWebVitals.js","index.js"],"names":["BASE_URL","axios","Axios","create","withCredentials","httpService","endpoint","data","ajax","a","method","url","params","res","console","log","dir","Error","movieName","q","movies","omdbID","movie","movieService","query","getById","SearchMovie","handleSubmit","useState","txt","setTxt","className","onSubmit","ev","preventDefault","type","placeholder","value","onChange","target","disabled","CardUI","img","txt1","txt2","btn","txt3","Card","sx","maxWidth","style","backgroundColor","CardMedia","component","height","image","CardContent","Typography","gutterBottom","variant","CardActions","Button","size","fontSize","MoviePreview","to","imdbID","Title","Year","Poster","NoImg","MovieList","map","Home","setMovies","isError","setIsError","search","useLocation","URLSearchParams","useEffect","searchQuerry","get","moviesToUpdate","Array","isArray","length","Loader","src","loader","alt","Ratings","rating","Source","Value","MovieDetails","setMovie","isErr","setErr","navigate","useNavigate","useParams","getMovie","movieToFind","setTimeout","handleBack","poster","title","released","rated","genre","director","writer","actors","plot","language","country","awards","ratings","metascore","imdbRating","imdbVotes","production","website","onClick","routes","path","element","App","route","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.66c1d74d.chunk.js","sourcesContent":["import Axios from 'axios'\n\nconst BASE_URL = process.env.NODE_ENV === 'production'\n    ? '/api/'\n    : '//localhost:3030/api/'\n\n\nvar axios = Axios.create({\n    withCredentials: true\n})\n\nexport const httpService = {\n    get(endpoint, data) {\n        return ajax(endpoint, 'GET', data)\n    },\n    post(endpoint, data) {\n        return ajax(endpoint, 'POST', data)\n    },\n    put(endpoint, data) {\n        return ajax(endpoint, 'PUT', data)\n    },\n    delete(endpoint, data) {\n        return ajax(endpoint, 'DELETE', data)\n    }\n}\n\nasync function ajax(endpoint, method = 'GET', data = null) {\n    try {\n        const res = await axios({\n            url: `${BASE_URL}${endpoint}`,\n            method,\n            data,\n            params: (method === 'GET') ? data : null\n        })\n        return res.data\n    } catch (err) {\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`)\n        console.dir(err)\n        throw new Error(err)\n    }\n}","import { httpService } from \"./http.service\"\n\nasync function query(movieName) {\n    try {\n\n        const movies = await httpService.get('movie', { q: movieName })\n        return movies\n    } catch (error) {\n        throw new Error(error)\n    }\n}\n\nasync function getById(omdbID) {\n    try {\n        const movie = await httpService.get(`movie/${omdbID}`)\n        return movie\n    } catch (error) {\n        throw new Error('Movie not found')\n    }\n}\n\n\nexport const movieService = {\n    query,\n    getById\n}","import { useState } from \"react\"\n\n\nexport const SearchMovie = ({ handleSubmit }) => {\n    const [txt, setTxt] = useState('')\n    const handleChange = ({ target }) => {\n        setTxt(target.value)\n    }\n    const onSubmit = ev => {\n        ev.preventDefault()\n        handleSubmit(txt)\n    }\n    return (\n        <section className=\"search-movie\">\n            <form onSubmit={onSubmit}>\n                <input type=\"text\" placeholder=\"Enter movie name\" value={txt} onChange={handleChange} />\n                <button type=\"submit\" disabled={!txt}>Search</button>\n            </form>\n        </section>\n    )\n}","import * as React from 'react';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport CardActions from '@mui/material/CardActions';\nimport DeleteForeverTwoToneIcon from '@mui/icons-material/DeleteForeverTwoTone';\n\nexport function CardUI({ img, txt1, txt2, txt3, btn }) {\n\n\n    return (\n        <Card className='movie-card' sx={{ maxWidth: 345 }} style={{ backgroundColor: '#ffffff57' }}>\n            <CardMedia\n                component=\"img\"\n                height=\"140\"\n                image={img}\n            />\n            <CardContent>\n                <Typography className='txt-1' gutterBottom variant=\"h5\" component=\"div\">\n                    {txt1}\n                </Typography>\n                <Typography className='txt-2' variant=\"subtitle2\">\n                    {txt2}\n                </Typography>\n            </CardContent>\n            {btn && <CardActions>\n                <Button size=\"small\"><DeleteForeverTwoToneIcon fontSize={'large'} /></Button>\n            </CardActions>}\n        </Card>\n    );\n}","export default __webpack_public_path__ + \"static/media/No_image_available.7ec9e7d5.png\";","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { CardUI } from './card-ui'\nimport NoImg from '../assets/imgs/No_image_available.png'\n\nexport const MoviePreview = ({ movie }) => {\n    return (\n        <div className=\"movie-preview\">\n            <Link to={`/${movie.imdbID}`}>\n                <CardUI\n                    txt1={movie.Title}\n                    txt2={movie.Year}\n                    img={movie.Poster === 'N/A' ? NoImg : movie.Poster}\n                />\n            </Link>\n        </div>\n    )\n}\n\n\n","\nimport React from 'react'\nimport { MoviePreview } from './movie-preview'\n\nexport const MovieList = ({ movies }) => {\n    return (\n        <div className=\"movie-list\">\n            {movies.map(movie => {\n                return <MoviePreview key={movie.imdbID} movie={movie} />\n            })}\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nimport { movieService } from '../services/movie.service'\nimport { SearchMovie } from '../cmps/search-movie'\nimport { MovieList } from '../cmps/movie-list'\n\nexport const Home = () => {\n    const [movies, setMovies] = useState([])\n    const [isError, setIsError] = useState(false)\n    const { search } = useLocation()\n    const query = new URLSearchParams(search)\n\n    useEffect(() => {\n        const searchQuerry = query.get('q')\n        if (searchQuerry) {\n            handleSubmit(searchQuerry)\n        }\n        // eslint-disable-next-line\n    }, [])\n\n    const handleSubmit = async (movieName) => {\n        try {\n            setIsError(false)\n            setMovies([])\n            const moviesToUpdate = await movieService.query(movieName)\n            setMovies(moviesToUpdate)\n        } catch (error) {\n            setIsError(true)\n        }\n    }\n    return (\n        <section className=\"home\">\n            <div className=\"title\">\n                <h2>Welcome to Movie Finder!</h2>\n                <h3>Please enter movie name and press Search button</h3>\n                <SearchMovie handleSubmit={handleSubmit} />\n            </div>\n            {isError && <h1>Sorry, can't find your movie right now. please try again later</h1>}\n            {Array.isArray(movies) && movies.length !== 0 && <MovieList movies={movies} />}\n        </section>\n    )\n}\n\n\n\n// [\n//     {\n//         Title: \"The Lion King\",\n//         Year: \"1994\",\n//         imdbID: \"tt0110357\",\n//         Type: \"movie\",\n//         Poster: \"https://m.media-amazon.com/images/M/MV5BYTYxNGMyZTYtMjE3MS00MzNjLWFjNmYtMDk3N2FmM2JiM2M1XkEyXkFqcGdeQXVyNjY5NDU4NzI@._V1_SX300.jpg\",\n//     },\n//     {\n//         Title: \"The Lion King\",\n//         Year: \"2019\",\n//         imdbID: \"tt6105098\",\n//         Type: \"movie\",\n//         Poster: \"https://m.media-amazon.com/images/M/MV5BMjIwMjE1Nzc4NV5BMl5BanBnXkFtZTgwNDg4OTA1NzM@._V1_SX300.jpg\",\n//     },\n//     {\n//         Title: \"The Lion King 2: Simba's Pride\",\n//         Year: \"1998\",\n//         imdbID: \"tt0120131\",\n//         Type: \"movie\",\n//         Poster: \"https://m.media-amazon.com/images/M/MV5BY2Y3MTk2MDgtOTc1Yy00ZmFjLThlNTEtMDQ1Y2EzZmRjMzVjXkEyXkFqcGdeQXVyNjk1Njg5NTA@._V1_SX300.jpg\",\n//     },\n//     {\n//         Title: \"The Lion King 3: Hakuna Matata\",\n//         Year: \"2004\",\n//         imdbID: \"tt0318403\",\n//         Type: \"movie\",\n//         Poster: \"https://m.media-amazon.com/images/M/MV5BOGZiMDQ1YTQtMGVlOC00OTJiLWFkYzMtYjdiYmY0NWM5YzVjXkEyXkFqcGdeQXVyOTg4MDk3MTQ@._V1_SX300.jpg\",\n//     },\n//     {\n//         Title: \"The Lion King\",\n//         Year: \"1994\",\n//         imdbID: \"tt0323073\",\n//         Type: \"game\",\n//         Poster: \"https://m.media-amazon.com/images/M/MV5BNzVmNzQ2ZmYtMmUzNy00MzhjLTg4ODUtMTQ0MjMzYTdkMDg5XkEyXkFqcGdeQXVyNTAyODkwOQ@@._V1_SX300.jpg\",\n//     },\n//     {\n//         Title: \"Simba: The King Lion\",\n//         Year: \"1995–\",\n//         imdbID: \"tt2374051\",\n//         Type: \"series\",\n//         Poster: \"https://m.media-amazon.com/images/M/MV5BNjkyOTczZGEtYmJhZC00ODIxLTg2NTQtNzUxNmNhZDgxN2Q1XkEyXkFqcGdeQXVyNjExODE1MDc@._V1_SX300.jpg\",\n//     },\n//     {\n//         Title: \"Leo the Lion: King of the Jungle\",\n//         Year: \"1994\",\n//         imdbID: \"tt0234092\",\n//         Type: \"movie\",\n//         Poster: \"https://m.media-amazon.com/images/M/MV5BOThjNzQ4MjktODE0Mi00NzM2LTljN2QtYjE5YWQ4NGQyOTNkXkEyXkFqcGdeQXVyODIxNjk4NzQ@._V1_SX300.jpg\",\n//     },\n//     {\n//         Title: \"The Making of 'The Lion King'\",\n//         Year: \"1994\",\n//         imdbID: \"tt0366742\",\n//         Type: \"movie\",\n//         Poster: \"https://m.media-amazon.com/images/M/MV5BNmMxM2E3NWItZjUzOS00MmE4LTkyMmYtM2UwZTJhMDUyZTUwXkEyXkFqcGdeQXVyODA0MzEyNjU@._V1_SX300.jpg\",\n//     },\n//     {\n//         Title: \"The Lion King: A Musical Journey with Elton John\",\n//         Year: \"1994\",\n//         imdbID: \"tt0245234\",\n//         Type: \"movie\",\n//         Poster: \"N/A\",\n//     },\n//     {\n//         Title: \"The Lion King: Timon and Pumbaa's Jungle Games\",\n//         Year: \"1995\",\n//         imdbID: \"tt0215934\",\n//         Type: \"game\",\n//         Poster: \"https://m.media-amazon.com/images/M/MV5BZTY0NTZjMWItY2MxNS00MGFkLTk0MjMtMjQ4Y2QyNmFjNTk2XkEyXkFqcGdeQXVyMzM4MjM0Nzg@._V1_SX300.jpg\",\n//     },\n// ]","export default __webpack_public_path__ + \"static/media/three-dots.85961182.svg\";","import loader from '../assets/imgs/three-dots.svg'\n\nexport const Loader = () => {\n    return <img className='loader' src={loader} alt=\"\" />\n}","\n\nexport const Ratings = ({ rating }) => {\n    return (\n        <p>Source: {rating.Source}. score: {rating.Value}</p>\n    )\n}","import React, { useEffect, useState } from 'react'\nimport { useParams, useNavigate } from 'react-router-dom'\nimport { Button } from '@mui/material';\nimport NoImg from '../assets/imgs/No_image_available.png'\nimport { Loader } from '../cmps/loader'\n\n\n\nimport { movieService } from '../services/movie.service'\nimport { Ratings } from '../cmps/ratings';\n\nexport const MovieDetails = () => {\n\n    const [movie, setMovie] = useState(null)\n    const [isErr, setErr] = useState(false)\n\n    let navigate = useNavigate()\n    const { omdbID } = useParams()\n    useEffect(() => {\n        getMovie(omdbID)\n        // eslint-disable-next-line\n    }, [omdbID])\n\n    const getMovie = async (omdbID) => {\n        try {\n            const movieToFind = await movieService.getById(omdbID)\n            setMovie(movieToFind)\n        } catch (error) {\n            setErr(true)\n            setTimeout(handleBack, 3000)\n        }\n    }\n\n    const handleBack = () => {\n        navigate('/')\n    }\n\n    if (isErr) return <div className=\"item-details\"><h1>No video found. Redirecting</h1></div>\n    if (!movie) return <Loader />\n    return (\n        <div className=\"item-details\">\n            <img src={movie.poster === 'N/A' ? NoImg : movie.poster} alt=\"\" />\n            <div className=\"details-data\">\n                <p>Title: {movie.title}</p>\n                <p>Release date: {movie.released}</p>\n                <p>Rated: {movie.rated}</p>\n                <p>Genre: {movie.genre}</p>\n                <p>Director: {movie.director}</p>\n                <p>Writer: {movie.writer}</p>\n                <p>Actors: {movie.actors}</p>\n                <p>Plot: {movie.plot}</p>\n                <p>Language: {movie.language}</p>\n                <p>Country: {movie.country}</p>\n                <p>Awards: {movie.awards}</p>\n                <div>Ratings: {movie.ratings.map(rating => <Ratings key={rating.Source} rating={rating} />)}</div>\n                <p>Metascore: {movie.metascore}</p>\n                <p>IMDB Rating: {movie.imdbRating}</p>\n                <p>IMDB Votes: {movie.imdbVotes}</p>\n                <p>Production: {movie.production}</p>\n                <p>Website: {movie.website}</p>\n            </div>\n            <div className=\"item-actions\">\n                <Button onClick={handleBack}>Back to search</Button>\n            </div>\n        </div>\n    )\n}\n","import { Home } from './pages/home'\nimport { MovieDetails } from './pages/movie-details'\n\n\nexport const routes = [\n    {\n        path: '/',\n        element: <Home />,\n    },\n\n    {\n        path: '/:omdbID',\n        element: <MovieDetails />\n    },\n\n]","import { HashRouter as Router, Route, Routes } from 'react-router-dom'\n\n\nimport './style/style.scss'\nimport { routes } from './routes';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <main>\n          <Routes>\n            {routes.map(route => (\n              <Route\n                key={route.path}\n                exact\n                element={route.element}\n                path={route.path}\n              />\n            ))}\n          </Routes>\n        </main>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}